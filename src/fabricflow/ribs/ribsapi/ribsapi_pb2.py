# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ribsapi.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ribsapi.proto',
  package='ribsapi',
  syntax='proto3',
  serialized_pb=_b('\n\rribsapi.proto\x12\x07ribsapi\"\x10\n\x0eGetRicsRequest\"\x14\n\x12GetNexthopsRequest\"\x16\n\x14GetNexthopMapRequest\"\r\n\x0bModRibReply\"\x0e\n\x0cSyncRibReply\"\x1c\n\x0eSyncRibRequest\x12\n\n\x02rt\x18\x01 \x01(\t\"-\n\x11MonitorRibRequest\x12\n\n\x02rt\x18\x01 \x01(\t\x12\x0c\n\x04n_id\x18\x02 \x01(\r\"6\n\tRibUpdate\x12\n\n\x02rt\x18\x01 \x01(\t\x12\x0e\n\x06prefix\x18\x02 \x01(\t\x12\r\n\x05paths\x18\x03 \x03(\x0c\"h\n\x08RicEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x0c\n\x04n_id\x18\x02 \x01(\r\x12\x0c\n\x04\x61\x64\x64r\x18\x03 \x01(\t\x12\x0c\n\x04port\x18\x04 \x01(\r\x12\n\n\x02rt\x18\x05 \x01(\t\x12\n\n\x02rd\x18\x06 \x01(\t\x12\r\n\x05label\x18\x07 \x01(\r\"\'\n\x04Path\x12\x0e\n\x06prefix\x18\x01 \x01(\t\x12\x0f\n\x07nexthop\x18\x02 \x01(\t\"3\n\x07Nexthop\x12\x0c\n\x04\x61\x64\x64r\x18\x01 \x01(\t\x12\n\n\x02rt\x18\x02 \x01(\t\x12\x0e\n\x06src_id\x18\x03 \x01(\t\"&\n\nNexthopMap\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x0b\n\x03val\x18\x02 \x01(\t2\xcf\x01\n\x07RIBSApi\x12\x39\n\x07GetRics\x12\x17.ribsapi.GetRicsRequest\x1a\x11.ribsapi.RicEntry\"\x00\x30\x01\x12@\n\x0bGetNexthops\x12\x1b.ribsapi.GetNexthopsRequest\x1a\x10.ribsapi.Nexthop\"\x00\x30\x01\x12G\n\rGetNexthopMap\x12\x1d.ribsapi.GetNexthopMapRequest\x1a\x13.ribsapi.NexthopMap\"\x00\x30\x01\x32\xc2\x01\n\x0bRIBSCoreApi\x12\x34\n\x06ModRib\x12\x12.ribsapi.RibUpdate\x1a\x14.ribsapi.ModRibReply\"\x00\x12@\n\nMonitorRib\x12\x1a.ribsapi.MonitorRibRequest\x1a\x12.ribsapi.RibUpdate\"\x00\x30\x01\x12;\n\x07SyncRib\x12\x17.ribsapi.SyncRibRequest\x1a\x15.ribsapi.SyncRibReply\"\x00\x62\x06proto3')
)




_GETRICSREQUEST = _descriptor.Descriptor(
  name='GetRicsRequest',
  full_name='ribsapi.GetRicsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=42,
)


_GETNEXTHOPSREQUEST = _descriptor.Descriptor(
  name='GetNexthopsRequest',
  full_name='ribsapi.GetNexthopsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=44,
  serialized_end=64,
)


_GETNEXTHOPMAPREQUEST = _descriptor.Descriptor(
  name='GetNexthopMapRequest',
  full_name='ribsapi.GetNexthopMapRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=66,
  serialized_end=88,
)


_MODRIBREPLY = _descriptor.Descriptor(
  name='ModRibReply',
  full_name='ribsapi.ModRibReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=90,
  serialized_end=103,
)


_SYNCRIBREPLY = _descriptor.Descriptor(
  name='SyncRibReply',
  full_name='ribsapi.SyncRibReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=105,
  serialized_end=119,
)


_SYNCRIBREQUEST = _descriptor.Descriptor(
  name='SyncRibRequest',
  full_name='ribsapi.SyncRibRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rt', full_name='ribsapi.SyncRibRequest.rt', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=121,
  serialized_end=149,
)


_MONITORRIBREQUEST = _descriptor.Descriptor(
  name='MonitorRibRequest',
  full_name='ribsapi.MonitorRibRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rt', full_name='ribsapi.MonitorRibRequest.rt', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='n_id', full_name='ribsapi.MonitorRibRequest.n_id', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=151,
  serialized_end=196,
)


_RIBUPDATE = _descriptor.Descriptor(
  name='RibUpdate',
  full_name='ribsapi.RibUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rt', full_name='ribsapi.RibUpdate.rt', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='prefix', full_name='ribsapi.RibUpdate.prefix', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='paths', full_name='ribsapi.RibUpdate.paths', index=2,
      number=3, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=198,
  serialized_end=252,
)


_RICENTRY = _descriptor.Descriptor(
  name='RicEntry',
  full_name='ribsapi.RicEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ribsapi.RicEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='n_id', full_name='ribsapi.RicEntry.n_id', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='addr', full_name='ribsapi.RicEntry.addr', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='ribsapi.RicEntry.port', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rt', full_name='ribsapi.RicEntry.rt', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rd', full_name='ribsapi.RicEntry.rd', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label', full_name='ribsapi.RicEntry.label', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=254,
  serialized_end=358,
)


_PATH = _descriptor.Descriptor(
  name='Path',
  full_name='ribsapi.Path',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='prefix', full_name='ribsapi.Path.prefix', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nexthop', full_name='ribsapi.Path.nexthop', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=360,
  serialized_end=399,
)


_NEXTHOP = _descriptor.Descriptor(
  name='Nexthop',
  full_name='ribsapi.Nexthop',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='addr', full_name='ribsapi.Nexthop.addr', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rt', full_name='ribsapi.Nexthop.rt', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='src_id', full_name='ribsapi.Nexthop.src_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=401,
  serialized_end=452,
)


_NEXTHOPMAP = _descriptor.Descriptor(
  name='NexthopMap',
  full_name='ribsapi.NexthopMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ribsapi.NexthopMap.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='val', full_name='ribsapi.NexthopMap.val', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=454,
  serialized_end=492,
)

DESCRIPTOR.message_types_by_name['GetRicsRequest'] = _GETRICSREQUEST
DESCRIPTOR.message_types_by_name['GetNexthopsRequest'] = _GETNEXTHOPSREQUEST
DESCRIPTOR.message_types_by_name['GetNexthopMapRequest'] = _GETNEXTHOPMAPREQUEST
DESCRIPTOR.message_types_by_name['ModRibReply'] = _MODRIBREPLY
DESCRIPTOR.message_types_by_name['SyncRibReply'] = _SYNCRIBREPLY
DESCRIPTOR.message_types_by_name['SyncRibRequest'] = _SYNCRIBREQUEST
DESCRIPTOR.message_types_by_name['MonitorRibRequest'] = _MONITORRIBREQUEST
DESCRIPTOR.message_types_by_name['RibUpdate'] = _RIBUPDATE
DESCRIPTOR.message_types_by_name['RicEntry'] = _RICENTRY
DESCRIPTOR.message_types_by_name['Path'] = _PATH
DESCRIPTOR.message_types_by_name['Nexthop'] = _NEXTHOP
DESCRIPTOR.message_types_by_name['NexthopMap'] = _NEXTHOPMAP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GetRicsRequest = _reflection.GeneratedProtocolMessageType('GetRicsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETRICSREQUEST,
  __module__ = 'ribsapi_pb2'
  # @@protoc_insertion_point(class_scope:ribsapi.GetRicsRequest)
  ))
_sym_db.RegisterMessage(GetRicsRequest)

GetNexthopsRequest = _reflection.GeneratedProtocolMessageType('GetNexthopsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETNEXTHOPSREQUEST,
  __module__ = 'ribsapi_pb2'
  # @@protoc_insertion_point(class_scope:ribsapi.GetNexthopsRequest)
  ))
_sym_db.RegisterMessage(GetNexthopsRequest)

GetNexthopMapRequest = _reflection.GeneratedProtocolMessageType('GetNexthopMapRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETNEXTHOPMAPREQUEST,
  __module__ = 'ribsapi_pb2'
  # @@protoc_insertion_point(class_scope:ribsapi.GetNexthopMapRequest)
  ))
_sym_db.RegisterMessage(GetNexthopMapRequest)

ModRibReply = _reflection.GeneratedProtocolMessageType('ModRibReply', (_message.Message,), dict(
  DESCRIPTOR = _MODRIBREPLY,
  __module__ = 'ribsapi_pb2'
  # @@protoc_insertion_point(class_scope:ribsapi.ModRibReply)
  ))
_sym_db.RegisterMessage(ModRibReply)

SyncRibReply = _reflection.GeneratedProtocolMessageType('SyncRibReply', (_message.Message,), dict(
  DESCRIPTOR = _SYNCRIBREPLY,
  __module__ = 'ribsapi_pb2'
  # @@protoc_insertion_point(class_scope:ribsapi.SyncRibReply)
  ))
_sym_db.RegisterMessage(SyncRibReply)

SyncRibRequest = _reflection.GeneratedProtocolMessageType('SyncRibRequest', (_message.Message,), dict(
  DESCRIPTOR = _SYNCRIBREQUEST,
  __module__ = 'ribsapi_pb2'
  # @@protoc_insertion_point(class_scope:ribsapi.SyncRibRequest)
  ))
_sym_db.RegisterMessage(SyncRibRequest)

MonitorRibRequest = _reflection.GeneratedProtocolMessageType('MonitorRibRequest', (_message.Message,), dict(
  DESCRIPTOR = _MONITORRIBREQUEST,
  __module__ = 'ribsapi_pb2'
  # @@protoc_insertion_point(class_scope:ribsapi.MonitorRibRequest)
  ))
_sym_db.RegisterMessage(MonitorRibRequest)

RibUpdate = _reflection.GeneratedProtocolMessageType('RibUpdate', (_message.Message,), dict(
  DESCRIPTOR = _RIBUPDATE,
  __module__ = 'ribsapi_pb2'
  # @@protoc_insertion_point(class_scope:ribsapi.RibUpdate)
  ))
_sym_db.RegisterMessage(RibUpdate)

RicEntry = _reflection.GeneratedProtocolMessageType('RicEntry', (_message.Message,), dict(
  DESCRIPTOR = _RICENTRY,
  __module__ = 'ribsapi_pb2'
  # @@protoc_insertion_point(class_scope:ribsapi.RicEntry)
  ))
_sym_db.RegisterMessage(RicEntry)

Path = _reflection.GeneratedProtocolMessageType('Path', (_message.Message,), dict(
  DESCRIPTOR = _PATH,
  __module__ = 'ribsapi_pb2'
  # @@protoc_insertion_point(class_scope:ribsapi.Path)
  ))
_sym_db.RegisterMessage(Path)

Nexthop = _reflection.GeneratedProtocolMessageType('Nexthop', (_message.Message,), dict(
  DESCRIPTOR = _NEXTHOP,
  __module__ = 'ribsapi_pb2'
  # @@protoc_insertion_point(class_scope:ribsapi.Nexthop)
  ))
_sym_db.RegisterMessage(Nexthop)

NexthopMap = _reflection.GeneratedProtocolMessageType('NexthopMap', (_message.Message,), dict(
  DESCRIPTOR = _NEXTHOPMAP,
  __module__ = 'ribsapi_pb2'
  # @@protoc_insertion_point(class_scope:ribsapi.NexthopMap)
  ))
_sym_db.RegisterMessage(NexthopMap)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class RIBSApiStub(object):
    """
    RIBS API

    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetRics = channel.unary_stream(
          '/ribsapi.RIBSApi/GetRics',
          request_serializer=GetRicsRequest.SerializeToString,
          response_deserializer=RicEntry.FromString,
          )
      self.GetNexthops = channel.unary_stream(
          '/ribsapi.RIBSApi/GetNexthops',
          request_serializer=GetNexthopsRequest.SerializeToString,
          response_deserializer=Nexthop.FromString,
          )
      self.GetNexthopMap = channel.unary_stream(
          '/ribsapi.RIBSApi/GetNexthopMap',
          request_serializer=GetNexthopMapRequest.SerializeToString,
          response_deserializer=NexthopMap.FromString,
          )


  class RIBSApiServicer(object):
    """
    RIBS API

    """

    def GetRics(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetNexthops(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetNexthopMap(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_RIBSApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetRics': grpc.unary_stream_rpc_method_handler(
            servicer.GetRics,
            request_deserializer=GetRicsRequest.FromString,
            response_serializer=RicEntry.SerializeToString,
        ),
        'GetNexthops': grpc.unary_stream_rpc_method_handler(
            servicer.GetNexthops,
            request_deserializer=GetNexthopsRequest.FromString,
            response_serializer=Nexthop.SerializeToString,
        ),
        'GetNexthopMap': grpc.unary_stream_rpc_method_handler(
            servicer.GetNexthopMap,
            request_deserializer=GetNexthopMapRequest.FromString,
            response_serializer=NexthopMap.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'ribsapi.RIBSApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class RIBSCoreApiStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.ModRib = channel.unary_unary(
          '/ribsapi.RIBSCoreApi/ModRib',
          request_serializer=RibUpdate.SerializeToString,
          response_deserializer=ModRibReply.FromString,
          )
      self.MonitorRib = channel.unary_stream(
          '/ribsapi.RIBSCoreApi/MonitorRib',
          request_serializer=MonitorRibRequest.SerializeToString,
          response_deserializer=RibUpdate.FromString,
          )
      self.SyncRib = channel.unary_unary(
          '/ribsapi.RIBSCoreApi/SyncRib',
          request_serializer=SyncRibRequest.SerializeToString,
          response_deserializer=SyncRibReply.FromString,
          )


  class RIBSCoreApiServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def ModRib(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def MonitorRib(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SyncRib(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_RIBSCoreApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'ModRib': grpc.unary_unary_rpc_method_handler(
            servicer.ModRib,
            request_deserializer=RibUpdate.FromString,
            response_serializer=ModRibReply.SerializeToString,
        ),
        'MonitorRib': grpc.unary_stream_rpc_method_handler(
            servicer.MonitorRib,
            request_deserializer=MonitorRibRequest.FromString,
            response_serializer=RibUpdate.SerializeToString,
        ),
        'SyncRib': grpc.unary_unary_rpc_method_handler(
            servicer.SyncRib,
            request_deserializer=SyncRibRequest.FromString,
            response_serializer=SyncRibReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'ribsapi.RIBSCoreApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaRIBSApiServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """
    RIBS API

    """
    def GetRics(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetNexthops(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetNexthopMap(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaRIBSApiStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """
    RIBS API

    """
    def GetRics(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetNexthops(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetNexthopMap(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_RIBSApi_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('ribsapi.RIBSApi', 'GetNexthopMap'): GetNexthopMapRequest.FromString,
      ('ribsapi.RIBSApi', 'GetNexthops'): GetNexthopsRequest.FromString,
      ('ribsapi.RIBSApi', 'GetRics'): GetRicsRequest.FromString,
    }
    response_serializers = {
      ('ribsapi.RIBSApi', 'GetNexthopMap'): NexthopMap.SerializeToString,
      ('ribsapi.RIBSApi', 'GetNexthops'): Nexthop.SerializeToString,
      ('ribsapi.RIBSApi', 'GetRics'): RicEntry.SerializeToString,
    }
    method_implementations = {
      ('ribsapi.RIBSApi', 'GetNexthopMap'): face_utilities.unary_stream_inline(servicer.GetNexthopMap),
      ('ribsapi.RIBSApi', 'GetNexthops'): face_utilities.unary_stream_inline(servicer.GetNexthops),
      ('ribsapi.RIBSApi', 'GetRics'): face_utilities.unary_stream_inline(servicer.GetRics),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_RIBSApi_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('ribsapi.RIBSApi', 'GetNexthopMap'): GetNexthopMapRequest.SerializeToString,
      ('ribsapi.RIBSApi', 'GetNexthops'): GetNexthopsRequest.SerializeToString,
      ('ribsapi.RIBSApi', 'GetRics'): GetRicsRequest.SerializeToString,
    }
    response_deserializers = {
      ('ribsapi.RIBSApi', 'GetNexthopMap'): NexthopMap.FromString,
      ('ribsapi.RIBSApi', 'GetNexthops'): Nexthop.FromString,
      ('ribsapi.RIBSApi', 'GetRics'): RicEntry.FromString,
    }
    cardinalities = {
      'GetNexthopMap': cardinality.Cardinality.UNARY_STREAM,
      'GetNexthops': cardinality.Cardinality.UNARY_STREAM,
      'GetRics': cardinality.Cardinality.UNARY_STREAM,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'ribsapi.RIBSApi', cardinalities, options=stub_options)


  class BetaRIBSCoreApiServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def ModRib(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def MonitorRib(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SyncRib(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaRIBSCoreApiStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def ModRib(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ModRib.future = None
    def MonitorRib(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def SyncRib(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SyncRib.future = None


  def beta_create_RIBSCoreApi_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('ribsapi.RIBSCoreApi', 'ModRib'): RibUpdate.FromString,
      ('ribsapi.RIBSCoreApi', 'MonitorRib'): MonitorRibRequest.FromString,
      ('ribsapi.RIBSCoreApi', 'SyncRib'): SyncRibRequest.FromString,
    }
    response_serializers = {
      ('ribsapi.RIBSCoreApi', 'ModRib'): ModRibReply.SerializeToString,
      ('ribsapi.RIBSCoreApi', 'MonitorRib'): RibUpdate.SerializeToString,
      ('ribsapi.RIBSCoreApi', 'SyncRib'): SyncRibReply.SerializeToString,
    }
    method_implementations = {
      ('ribsapi.RIBSCoreApi', 'ModRib'): face_utilities.unary_unary_inline(servicer.ModRib),
      ('ribsapi.RIBSCoreApi', 'MonitorRib'): face_utilities.unary_stream_inline(servicer.MonitorRib),
      ('ribsapi.RIBSCoreApi', 'SyncRib'): face_utilities.unary_unary_inline(servicer.SyncRib),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_RIBSCoreApi_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('ribsapi.RIBSCoreApi', 'ModRib'): RibUpdate.SerializeToString,
      ('ribsapi.RIBSCoreApi', 'MonitorRib'): MonitorRibRequest.SerializeToString,
      ('ribsapi.RIBSCoreApi', 'SyncRib'): SyncRibRequest.SerializeToString,
    }
    response_deserializers = {
      ('ribsapi.RIBSCoreApi', 'ModRib'): ModRibReply.FromString,
      ('ribsapi.RIBSCoreApi', 'MonitorRib'): RibUpdate.FromString,
      ('ribsapi.RIBSCoreApi', 'SyncRib'): SyncRibReply.FromString,
    }
    cardinalities = {
      'ModRib': cardinality.Cardinality.UNARY_UNARY,
      'MonitorRib': cardinality.Cardinality.UNARY_STREAM,
      'SyncRib': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'ribsapi.RIBSCoreApi', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
